# Travis CI (MIT License) configuration file for the learngit demonstration project
# @link https://travis-ci.org/

# For use with the LearnGit demonstration project
# @link https://github.com/matt-bernhardt/learngit

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
php:
  # aliased to a recent 5.5.x version
  - "5.5"
  # aliased to a recent 5.4.x version
  # "5.4"
  # aliased to a recent 5.3.x version
  # "5.3"
  # HipHop VM
  # hhvm

before_script:
  # Update composer
  - composer self-update
  - composer --version
  # Install CodeSniffer for WordPress Coding Standards checks.
  - git clone https://github.com/squizlabs/PHP_CodeSniffer.git php-codesniffer
  # Hop into CodeSniffer directory.
  - cd php-codesniffer
  # After CodeSniffer install you should refresh your path.
  - phpenv rehash
  # Return home
  - cd ..

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Search for PHP syntax errors.
  - find . \( -name '*.php' \) -exec php -lf {} \;
  # Figure out where the heck I am...
  - pwd
  - ls -l
  # @link http://pear.php.net/package/PHP_CodeSniffer/
  # -p flag: Show progress of the run.
  # -s flag: Show sniff codes in all reports.
  # -v flag: Print verbose output.
  # -n flag: Do not print warnings. (shortcut for --warning-severity=0)
  # --extensions: Only sniff PHP files.
  - ./php-codesniffer/scripts/phpcs -p -s -v -n ../. --standard=./codesniffer.ruleset.xml --extensions=php

# Receive notifications for build results.
# @link http://docs.travis-ci.com/user/notifications/#Email-notifications
notifications:
  email: false